@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* React Grid Layout custom styles */
.react-grid-layout {
  position: relative;
}

/* Grille visible en mode édition */
.react-grid-layout.show-grid {
  background-image:
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent calc(var(--row-height) - 1px),
      rgb(59 130 246 / 0.15) calc(var(--row-height) - 1px),
      rgb(59 130 246 / 0.15) var(--row-height)
    ),
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent calc((100% - (var(--gap) * (var(--columns) - 1))) / var(--columns) - 1px),
      rgb(59 130 246 / 0.15) calc((100% - (var(--gap) * (var(--columns) - 1))) / var(--columns) - 1px),
      rgb(59 130 246 / 0.15) calc((100% - (var(--gap) * (var(--columns) - 1))) / var(--columns))
    );
  background-size:
    100% calc(var(--row-height) + var(--gap)),
    calc((100% - (var(--gap) * (var(--columns) - 1))) / var(--columns) + var(--gap)) 100%;
}

/* Zone de drop personnalisée */
.react-grid-placeholder {
  background: rgb(147 197 253 / 0.4) !important;
  border: 2px dashed rgb(59 130 246) !important;
  border-radius: 0.5rem !important;
  transition: all 0.2s ease !important;
  z-index: 2 !important;
  backdrop-filter: blur(4px);
}

/* Animation de pulse sur la zone de drop */
.react-grid-placeholder::before {
  content: '';
  position: absolute;
  inset: 0;
  background: rgb(59 130 246 / 0.1);
  border-radius: 0.5rem;
  animation: pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Widget en cours de drag */
.react-grid-item.react-draggable-dragging {
  transition: none !important;
  z-index: 100 !important;
  opacity: 0.9 !important;
  transform: scale(1.02) !important;
  box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1) !important;
}

/* Widget qui va être déplacé (collision) */
.react-grid-item.dropping {
  opacity: 1 !important;
}

/* Overlay pour collision - fond rouge clair */
.react-grid-item.collision-warning {
  position: relative;
}

.react-grid-item.collision-warning::after {
  content: '';
  position: absolute;
  inset: 0;
  background: rgb(239 68 68 / 0.15);
  border: 2px solid rgb(239 68 68 / 0.4);
  border-radius: 0.5rem;
  pointer-events: none;
  z-index: 1;
  animation: shake 0.4s ease;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-4px); }
  75% { transform: translateX(4px); }
}

/* Widget en resize */
.react-grid-item.react-resizable-resizing {
  transition: none !important;
  z-index: 100 !important;
  opacity: 0.95 !important;
}

/* Poignées de resize personnalisées */
.react-resizable-handle {
  opacity: 0;
  transition: opacity 0.2s ease;
}

.react-grid-item:hover .react-resizable-handle {
  opacity: 1;
}

.react-resizable-handle-se {
  bottom: 0;
  right: 0;
  cursor: se-resize;
}

.react-resizable-handle-se::after {
  content: '';
  position: absolute;
  right: 3px;
  bottom: 3px;
  width: 8px;
  height: 8px;
  border-right: 2px solid rgb(59 130 246);
  border-bottom: 2px solid rgb(59 130 246);
  border-radius: 0 0 4px 0;
}

/* Grid overlay pendant le drag */
.grid-overlay {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 1;
}

.grid-cell {
  position: absolute;
  border: 1px dotted rgb(59 130 246 / 0.3);
  background: white;
  transition: all 0.15s ease;
}

.grid-cell.hover {
  background: rgb(147 197 253 / 0.3);
  border-color: rgb(59 130 246);
  border-style: solid;
}

.grid-cell.occupied {
  background: rgb(254 202 202 / 0.3);
  border-color: rgb(239 68 68 / 0.5);
}
